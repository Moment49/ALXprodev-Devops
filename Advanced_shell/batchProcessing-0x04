#!/bin/bash

pokemon_list='["bulbasaur", "ivysaur", "venusaur", "charmander", "charmeleon"]'
timeout_sec=10

fetch_pokemon() {
  local pokemon=$1
  echo "Starting fetch for $pokemon..."

  local max_attempts=3
  local attempt=0
  local success=0

  while (( attempt < max_attempts )); do
    ((attempt++))

    # Start curl in background
    curl -s -o "$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon" &
    pid=$!

    # Wait up to timeout_sec for curl to finish
    local waited=0
    while kill -0 "$pid" 2>/dev/null; do
      sleep 1
      ((waited++))
      if (( waited >= timeout_sec )); then
        echo "Timeout reached for $pokemon (attempt $attempt), killing process $pid"
        kill "$pid"
        wait "$pid" 2>/dev/null
        break
      fi
    done

    wait "$pid"
    http_code=$?

    if [[ $http_code -eq 0 && -s "$pokemon.json" ]]; then
      echo "Successfully saved $pokemon.json"
      success=1
      break
    else
      echo "Attempt $attempt failed for $pokemon, retrying..."
      sleep 2
    fi
  done

  if (( success == 0 )); then
    echo "Failed to fetch $pokemon after $max_attempts attempts."
    [[ -f "$pokemon.json" ]] && rm "$pokemon.json"
  fi
}

export -f fetch_pokemon

for pokemon in $(echo "$pokemon_list" | jq -r '.[]'); do
  fetch_pokemon "$pokemon" &
done

wait

echo "All Pok√©mon data fetched."
